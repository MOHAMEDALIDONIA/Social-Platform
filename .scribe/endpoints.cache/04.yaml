## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Post User'
description: |-

  APIs for managing Comments,likes, posts.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/post/edit/{id}'
    metadata:
      groupName: 'Post User'
      groupDescription: |-

        APIs for managing Comments,likes, posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the details of the post to be edited.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the edit.'
        required: true
        example: exercitationem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: exercitationem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Success show user",
            "data": {
              "post": {
                "id": 1,
                "content": "This is a post",
                "user_id": 1,
                "created_at": "2024-11-18T12:00:00Z",
                // Additional post fields
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": false,
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/post-image/delete/{id}'
    metadata:
      groupName: 'Post User'
      groupDescription: |-

        APIs for managing Comments,likes, posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a post image.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: impedit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Post Image Deleted Successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/post-comment/{id}'
    metadata:
      groupName: 'Post User'
      groupDescription: |-

        APIs for managing Comments,likes, posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a comment for a post.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post comment.'
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: beatae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The content of the comment.'
        required: true
        example: '"Great post!"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image:
        name: image
        description: 'optional The image attached to the comment.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: '"Great post!"'
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "success comment",
            "data": "John Doe"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/post-like/{id}'
    metadata:
      groupName: 'Post User'
      groupDescription: |-

        APIs for managing Comments,likes, posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Like or unlike a post.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post like.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Liked Post",
            "data": {
              "likes_count": 5
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/post-users-likes/{id}'
    metadata:
      groupName: 'Post User'
      groupDescription: |-

        APIs for managing Comments,likes, posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the users who liked a post.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post users like.'
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: maiores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "user like post",
            "data": [
              {
                "id": 1,
                "name": "John Doe",
                "image": "/images/johndoe.jpg"
              },
              // Other users
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts
    metadata:
      groupName: 'Post User'
      groupDescription: |-

        APIs for managing Comments,likes, posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created post in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The content of the post.'
        required: true
        example: '"This is a new post."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image:
        name: image
        description: 'optional The image attached to the post.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: '"This is a new post."'
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: |-
          {
            "status": true,
            "message": "Added Post Successfully",
            "data": {
              "id": 1,
              "content": "This is a new post.",
              "user_id": 1,
              "created_at": "2024-11-18T12:00:00Z",
              // Other post fields
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": false,
            "message": "Validation error."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: 'Post User'
      groupDescription: |-

        APIs for managing Comments,likes, posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified post in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: harum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The updated content of the post.'
        required: true
        example: '"Updated post content."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image:
        name: image
        description: 'optional The updated image attached to the post.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: '"Updated post content."'
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Updated Post Successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": false,
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: 'Post User'
      groupDescription: |-

        APIs for managing Comments,likes, posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified post from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: in
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Deleted Post Successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": false,
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
