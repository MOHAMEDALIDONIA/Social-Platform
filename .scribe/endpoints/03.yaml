name: 'User Profile'
description: |-

  APIs for managing user profile, friends, posts, and password changes.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/profile/edit/{id}'
    metadata:
      groupName: 'User Profile'
      groupDescription: |-

        APIs for managing user profile, friends, posts, and password changes.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show specific user profile.'
      description: 'Retrieves the profile information of a user by ID.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": true,
             "message": "Success show user",
             "data": {
                 "user": {
                     "id": 1,
                     "name": "John Doe",
                     "email": "john@example.com"
                 }
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
             "status": false,
             "message": "unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "status": false,
             "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/changepassword
    metadata:
      groupName: 'User Profile'
      groupDescription: |-

        APIs for managing user profile, friends, posts, and password changes.
      subgroup: ''
      subgroupDescription: ''
      title: 'Change user password.'
      description: "Changes the authenticated user's password."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: "The user's current password."
        required: true
        example: '"oldpassword"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The new password.'
        required: true
        example: '"newpassword123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The confirmation of the new password.'
        required: true
        example: '"newpassword123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      current_password: '"oldpassword"'
      password: '"newpassword123"'
      password_confirmation: '"newpassword123"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": true,
             "message": "Password Updated Successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "status": false,
             "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 800
        content: |-
          {
             "status": false,
             "message": "Current Password does not match with Old Password"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/profiles
    metadata:
      groupName: 'User Profile'
      groupDescription: |-

        APIs for managing user profile, friends, posts, and password changes.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get profile information.'
      description: "Retrieves the authenticated user's profile information, including their friends list and posts."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": true,
             "message": "Success",
             "data": {
                "user": {
                    "id": 1,
                    "name": "John Doe",
                    "email": "john@example.com",
                    "created_at": "2024-11-17T10:20:30.000Z"
                },
                "userfriends": [
                   { "id": 2, "name": "Jane Doe" }
                ],
                "userposts": [
                   {
                       "id": 1,
                       "user_id": 1,
                       "content": "This is a sample post",
                       "created_at": "2024-11-17T10:20:30.000Z",
                       "comments": []
                   }
                ]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/profiles/{id}'
    metadata:
      groupName: 'User Profile'
      groupDescription: |-

        APIs for managing user profile, friends, posts, and password changes.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user profile.'
      description: 'Updates the profile information of the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "optional The user's name."
        required: false
        example: '"John Doe"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "optional The user's email address."
        required: false
        example: '"john@example.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"John Doe"'
      email: '"john@example.com"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": true,
             "message": "Update Data Successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
             "status": false,
             "message": "unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "status": false,
             "message": "An error occurred Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
